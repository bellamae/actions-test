name: triage metrics

on:
  workflow_dispatch:
    inputs:
      startDate:
        description: 'Start date'
        type: date
      endDate:
        description: 'End date'
        type: date
jobs:
  seven-day-close:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ADD_TO_PROJECT_TOKEN }}
          script: |
            const QUERY = `is:issue+repo:konabell/actions-test+project:konabell/1`
            const issues = []
            const iterator = github.paginate.iterator(github.rest.search.issuesAndPullRequests, {
              q: QUERY,
              per_page: 100,
            })
            for await (const { data } of iterator) {
              for (const issue of data) {
                let endDateTime
                if (!issue.pull_request) {
                  const routedLabel = issue.labels.find(label => (label.name === 'route' || label.name === 'route'))
                  if (routedLabel) {
                    const iterator = github.paginate.iterator(github.rest.issues.listEventsForTimeline, {
                      owner: 'konabell',
                      repo: 'actions-test',
                      issue_number: issue.number,
                    })
                    for await (const { timelineData } of iterator) {
                      console.log(timelineData)
                      for (const timelineItem of timelineData) {
                        if (timelineItem.event === 'labeled' && timelineItem.label.name === 'route') {
                          endDateTime = timelineItem.createdAt
                          break
                        }
                      }
                      if (endDateTime) break
                    }
                  } else if (issue.state === 'closed') {
                    endDateTime = issue.closed_at
                  }
                  issues.push({
                    number: issue.number,
                    title: issue.title,
                    state: issue.state,
                    comment_count: issue.comments,
                    url: issue.html_url,
                    endDateTime,
                  })
                }
              }
            }
            
            console.log(issues)
